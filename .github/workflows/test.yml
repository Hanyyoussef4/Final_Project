name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fastapi_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fastapi_test_db
      TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fastapi_test_db
      JWT_SECRET_KEY: "super-secret-key-for-jwt-min-32-chars"
      JWT_REFRESH_SECRET_KEY: "super-refresh-secret-key-min-32-chars"
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      BCRYPT_ROUNDS: 12

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if PGPASSWORD=postgres psql -h localhost -U postgres -d fastapi_test_db -c '\q' 2>/dev/null; then
              echo "Postgres is ready!"
              break
            fi
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Create schema from models (skip migrations)
        run: |
          source .venv/bin/activate
          python -c "from app.database import Base, engine; Base.metadata.create_all(bind=engine)"

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest --maxfail=1 --disable-warnings -q

name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fastapi_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Install Playwright browsers so UI tests don't fail
      - name: Install Playwright browsers
        run: |
          source .venv/bin/activate
          playwright install --with-deps

      # Create schema directly from models (skip migrations)
      - name: Create schema from models
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fastapi_test_db
        run: |
          source .venv/bin/activate
          python -c "from app.database import Base, engine; Base.metadata.create_all(bind=engine)"

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fastapi_test_db
        run: |
          source .venv/bin/activate
          pytest --maxfail=1 --disable-warnings -q --cov=app --cov-report=term-missing

  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Run security checks
        run: echo "Security checks go here"

  deploy:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to GitHub Pages
        run: echo "Deployment steps go here"
